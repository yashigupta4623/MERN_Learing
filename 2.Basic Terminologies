# Basic Terminologies in Web Development

1. **Network**: A network is a group of interconnected computers that can share resources and communicate with each other. 
- Types -: LAN, MAN, WAN.

2. **Internet(Network of Networks) **: The internet is a global network of networks that connects millions of private, public, academic, business, and government networks.

3. **World Wide Web (WWW)**: The WWW is a system of interlinked hypertext documents and multimedia content accessed via the internet using a web browser.

4. **IP Address**: An IP address is a unique string of numbers separated by periods or colons that identifies each computer using the Internet Protocol to communicate over a network.

5. **Browser**: A web browser is a software application used to access and view websites on the internet (e.g., Chrome, Firefox, Safari).

6. **Browser Engine**: A browser engine is the core software component of a web browser responsible for rendering web pages and executing web content (e.g., Blink, Webkit).

7. **Client**: In web development, a client is a device or application that requests services or resources from a server.

8. **Server**: A server is a computer or system that provides resources, data, services, or programs to other computers, known as clients, over a network.

9. **Domain**: A domain is a human-readable address used to access websites on the internet (e.g., example.com).

10. **HTTP/HTTPS**: Hypertext Transfer Protocol (HTTP) is the foundation of data communication on the web. HTTPS is the secure version of HTTP, which encrypts data for secure communication.

11. **URL**: A Uniform Resource Locator (URL) is the address used to access resources on the internet.

12. **DNS**: The Domain Name System (DNS) translates human-readable domain names into IP addresses that computers use to identify each other on the network.

13. **HTML**: Hypertext Markup Language (HTML) is the standard language used to create and design web pages.

14. **CSS**: Cascading Style Sheets (CSS) is a style sheet language used to describe the presentation of a document written in HTML or XML.

15. **JavaScript**: JavaScript is a programming language used to create dynamic and interactive effects within web browsers.

16. **API**: An Application Programming Interface (API) is a set of rules and protocols for building and interacting with software applications.

17. **Frontend**: The frontend refers to the client-side part of a web application that users interact with directly.

18. **Backend**: The backend refers to the server-side part of a web application that handles data processing, storage, and server logic.

19. **Database**: A database is an organized collection of data, generally stored and accessed electronically from a computer system.

20. **Framework**: A framework is a platform for developing software applications that provides a foundation and set of tools to streamline development.

21. **Library**: A library is a collection of pre-written code that developers can use to optimize tasks.

22. **HTTP Request**: An HTTP request is a message sent by the client to the server to request data or perform an action.

23. **HTTP Response**: An HTTP response is a message sent by the server to the client in response to an HTTP request.

24. **REST**: Representational State Transfer (REST) is an architectural style for designing networked applications using stateless communication.

25. **JSON**: JavaScript Object Notation (JSON) is a lightweight data interchange format that is easy for humans to read and write and easy for machines to parse and generate.

### Note to Remember:

Hereâ€™s a brief overview of key networking devices:

### **Switch**  
- A device that connects multiple devices within a local area network (LAN).  
- Operates at the **data link layer** (Layer 2) of the OSI model.  
- **Purpose**: Directs data packets to the specific device they are intended for, improving network efficiency.  

---

### **Hub**  
- A basic networking device that connects multiple devices in a LAN.  
- Operates at the **physical layer** (Layer 1) of the OSI model.  
- **Purpose**: Broadcasts data to all connected devices, making it less efficient than a switch.  

---

### **Modem**  
- Short for **Modulator-Demodulator**.  
- **Purpose**: Converts digital data from your computer into analog signals for transmission over telephone lines or cable networks, and vice versa.  
- Essential for connecting to the internet.

---

### **Router**  
- A device that connects different networks (e.g., a home network to the internet).  
- Operates at the **network layer** (Layer 3) of the OSI model.  
- **Purpose**: Directs data packets between networks and manages traffic efficiently.  

---

### **Access Point**  
- A device that provides wireless connectivity to a wired network.  
- Often integrated into routers for home and office use.  
- **Purpose**: Extends the wireless range of a network.  

These devices form the backbone of networking, enabling communication between devices and access to the internet.

---

### Command to know the IP address of 'www.google.com' or any other website.

import socket

# Get the IP address of www.google.com
ip_address = socket.gethostbyname('www.google.com')
print(f'The IP address of www.google.com is: {ip_address}')

---

An IP address uniquely identifies each device on a network, enabling communication over the internet or a local network. There are two versions: IPv4 and IPv6.

### IPv4
- **Format**: Four decimal octets separated by periods (e.g., `192.168.1.1`).
- **Address Space**: Approximately 4.3 billion addresses (2^32).
- **Example**: `192.168.0.1`

### IPv6
- **Format**: Eight groups of four hexadecimal digits separated by colons (e.g., `2001:0db8:85a3:0000:0000:8a2e:0370:7334`).
- **Address Space**: Approximately 340 undecillion addresses (2^128).
- **Example**: `2001:0db8:85a3:0000:0000:8a2e:0370:7334`

### Why IPv4 and IPv6?
- **IPv4 Limitations**: The 32-bit address space is insufficient for the growing number of devices.
- **IPv6 Solution**: Provides a larger address space, improved routing, and enhanced security.

Both IPv4 and IPv6 are in use, with transition mechanisms ensuring compatibility.